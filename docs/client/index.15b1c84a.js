import{S as e,i as t,s as r,e as s,t as a,f as o,g as n,h as l,d as h,j as g,k as _,l as u,m as i,a as c,q as p,c as k,n as f,o as m}from"./client.a14dec3d.js";function d(e,t,r){const s=e.slice();return s[1]=t[r],s}function v(e){let t,r,c,p,k=e[1].title+"";return{c(){t=s("li"),r=s("a"),c=a(k),this.h()},l(e){t=o(e,"LI",{});var s=n(t);r=o(s,"A",{rel:!0,href:!0});var a=n(r);c=l(a,k),a.forEach(h),s.forEach(h),this.h()},h(){g(r,"rel","prefetch"),g(r,"href",p="dev/"+e[1].slug)},m(e,s){_(e,t,s),u(t,r),u(r,c)},p(e,t){1&t&&k!==(k=e[1].title+"")&&i(c,k),1&t&&p!==(p="dev/"+e[1].slug)&&g(r,"href",p)},d(e){e&&h(t)}}}function y(e){let t,r,i,y,b,E,x,w,A,O,S,C,D,H,I,L,j,P,T,W,q=e[0],R=[];for(let t=0;t<q.length;t+=1)R[t]=v(d(e,q,t));return{c(){t=c(),r=s("h1"),i=a("Anonlang - Anonsage Language"),y=c(),b=s("p"),E=a("I like thinking about programming language design. So, here's a few thoughts and sample syntax of the latest iteration I'm working on:"),x=a("\r\n\r\nOutput 'Hello, World!':\r\n"),w=s("pre"),A=s("code"),O=a("'Hello, World!'"),S=a("\r\n\r\nSimple Temperature converter:\r\n"),C=s("pre"),D=s("code"),H=a("fahrenheit = celsius * 1.8 + 32\r\n  'Fahrenheit: ' <input id=fah type=number bind=solve(fahrenheit, celsius=cel)>\r\n  'Celsius: ' <input id=cel type=number bind=solve(celsius, fahrenheit=fah)>"),I=a("\r\n\r\nSimple TODO list with local and remote storage:\r\n"),L=s("pre"),j=s("code"),P=a("storage_key = 'tasks'\r\n  pref_key = 'user_storage_type_pref'\r\n  local_storage = platform.storage\r\n  remote_storage = url(https://example.com/api/storage)\r\n  user_storage = local_storage(pref_key) otherwise remote_storage(pref_key) otherwise local_storage\r\n  get_tasks() = user_storage(storage_key) otherwise mutable_list()\r\n  tasks = get_tasks()\r\n  save_task(value) = tasks.add(value) then user_storage(storage_key).add(value)\r\n  remove_task(value) = tasks.remove(value) then user_storage(storage_key).remove(value)\r\n  set_user_storage_type(storage_type) = local_storage(pref_key).set(storage_type) then remote_storage(pref_key).set(storage_type) then user_storage.update() then tasks.update()\r\n\r\n  <checkbox text='Use remote storage?'\r\n            on_check=set_user_storage_type(remote_storage)\r\n            on_uncheck=set_user_storage_type(local_storage)>\r\n  <input hint='Add a task' on_key_enter=save_task(input.text)>\r\n  <list bind=tasks template(task)=`<checkbox on_check=remove_task(task)> task`>"),T=c(),W=s("ul");for(let e=0;e<R.length;e+=1)R[e].c();this.h()},l(e){p('[data-svelte="svelte-15q7n7k"]',document.head).forEach(h),t=k(e),r=o(e,"H1",{});var s=n(r);i=l(s,"Anonlang - Anonsage Language"),s.forEach(h),y=k(e),b=o(e,"P",{});var a=n(b);E=l(a,"I like thinking about programming language design. So, here's a few thoughts and sample syntax of the latest iteration I'm working on:"),a.forEach(h),x=l(e,"\r\n\r\nOutput 'Hello, World!':\r\n"),w=o(e,"PRE",{});var g=n(w);A=o(g,"CODE",{});var _=n(A);O=l(_,"'Hello, World!'"),_.forEach(h),g.forEach(h),S=l(e,"\r\n\r\nSimple Temperature converter:\r\n"),C=o(e,"PRE",{});var u=n(C);D=o(u,"CODE",{});var c=n(D);H=l(c,"fahrenheit = celsius * 1.8 + 32\r\n  'Fahrenheit: ' <input id=fah type=number bind=solve(fahrenheit, celsius=cel)>\r\n  'Celsius: ' <input id=cel type=number bind=solve(celsius, fahrenheit=fah)>"),c.forEach(h),u.forEach(h),I=l(e,"\r\n\r\nSimple TODO list with local and remote storage:\r\n"),L=o(e,"PRE",{});var f=n(L);j=o(f,"CODE",{});var m=n(j);P=l(m,"storage_key = 'tasks'\r\n  pref_key = 'user_storage_type_pref'\r\n  local_storage = platform.storage\r\n  remote_storage = url(https://example.com/api/storage)\r\n  user_storage = local_storage(pref_key) otherwise remote_storage(pref_key) otherwise local_storage\r\n  get_tasks() = user_storage(storage_key) otherwise mutable_list()\r\n  tasks = get_tasks()\r\n  save_task(value) = tasks.add(value) then user_storage(storage_key).add(value)\r\n  remove_task(value) = tasks.remove(value) then user_storage(storage_key).remove(value)\r\n  set_user_storage_type(storage_type) = local_storage(pref_key).set(storage_type) then remote_storage(pref_key).set(storage_type) then user_storage.update() then tasks.update()\r\n\r\n  <checkbox text='Use remote storage?'\r\n            on_check=set_user_storage_type(remote_storage)\r\n            on_uncheck=set_user_storage_type(local_storage)>\r\n  <input hint='Add a task' on_key_enter=save_task(input.text)>\r\n  <list bind=tasks template(task)=`<checkbox on_check=remove_task(task)> task`>"),m.forEach(h),f.forEach(h),T=k(e),W=o(e,"UL",{class:!0});var d=n(W);for(let e=0;e<R.length;e+=1)R[e].l(d);d.forEach(h),this.h()},h(){document.title="Anonlang - Anonsage Language",g(W,"class","svelte-t8e7u1")},m(e,s){_(e,t,s),_(e,r,s),u(r,i),_(e,y,s),_(e,b,s),u(b,E),_(e,x,s),_(e,w,s),u(w,A),u(A,O),_(e,S,s),_(e,C,s),u(C,D),u(D,H),_(e,I,s),_(e,L,s),u(L,j),u(j,P),_(e,T,s),_(e,W,s);for(let e=0;e<R.length;e+=1)R[e].m(W,null)},p(e,[t]){if(1&t){let r;for(q=e[0],r=0;r<q.length;r+=1){const s=d(e,q,r);R[r]?R[r].p(s,t):(R[r]=v(s),R[r].c(),R[r].m(W,null))}for(;r<R.length;r+=1)R[r].d(1);R.length=q.length}},i:f,o:f,d(e){e&&h(t),e&&h(r),e&&h(y),e&&h(b),e&&h(x),e&&h(w),e&&h(S),e&&h(C),e&&h(I),e&&h(L),e&&h(T),e&&h(W),m(R,e)}}}function b({params:e,query:t}){return this.fetch("dev.json").then(e=>e.json()).then(e=>({posts:e}))}function E(e,t,r){let{posts:s}=t;return e.$set=(e=>{"posts"in e&&r(0,s=e.posts)}),[s]}export default class extends e{constructor(e){super(),t(this,e,E,y,r,{posts:0})}}export{b as preload};
