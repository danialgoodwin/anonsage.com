import{S as e,i as t,s as r,e as a,t as s,f as o,g as n,h as l,d as h,j as g,k as _,l as u,m as i,a as c,q as p,c as k,n as f,o as m}from"./client.9aae10fa.js";function d(e,t,r){const a=e.slice();return a[1]=t[r],a}function v(e){let t,r,c,p,k=e[1].title+"";return{c(){t=a("li"),r=a("a"),c=s(k),this.h()},l(e){t=o(e,"LI",{});var a=n(t);r=o(a,"A",{rel:!0,href:!0});var s=n(r);c=l(s,k),s.forEach(h),a.forEach(h),this.h()},h(){g(r,"rel","prefetch"),g(r,"href",p="dev/"+e[1].slug)},m(e,a){_(e,t,a),u(t,r),u(r,c)},p(e,t){1&t&&k!==(k=e[1].title+"")&&i(c,k),1&t&&p!==(p="dev/"+e[1].slug)&&g(r,"href",p)},d(e){e&&h(t)}}}function y(e){let t,r,i,y,E,b,x,w,O,I,A,S,T,C,H,L,D,P,U,j,W,q,N,F,B,K,R=e[0],X=[];for(let t=0;t<R.length;t+=1)X[t]=v(d(e,R,t));return{c(){t=c(),r=a("h1"),i=s("Anonlang - Anonsage Language"),y=c(),E=a("p"),b=s("I like thinking about programming language design. So, here's a few thoughts and sample syntax of the latest iteration I'm working on:"),x=s("\r\n\r\nOutput 'Hello, World!':\r\n"),w=a("code"),O=s("'Hello, World!'"),I=s("\r\n\r\nSimple Temperature converter:\r\n"),A=a("code"),S=s("fahrenheit = celsius * 1.8 + 32\r\n  'Fahrenheit: ' "),T=a("input"),C=s("\r\n  'Celsius: ' "),H=a("input"),L=s("\r\n\r\nSimple TODO list with local and remote storage:\r\n"),D=a("pre"),P=a("code"),U=s("storage_key = 'tasks'\r\n  pref_key = 'user_storage_type_pref'\r\n  local_storage = platform.storage\r\n  remote_storage = url(https://example.com/api/storage)\r\n  user_storage = local_storage(pref_key) otherwise remote_storage(pref_key) otherwise local_storage\r\n  get_tasks() = user_storage(storage_key) otherwise mutable_list()\r\n  tasks = get_tasks()\r\n  save_task(value) = tasks.add(value) then user_storage(storage_key).add(value)\r\n  remove_task(value) = tasks.remove(value) then user_storage(storage_key).remove(value)\r\n  set_user_storage_type(storage_type) = local_storage(pref_key).set(storage_type) then remote_storage(pref_key).set(storage_type) then user_storage.update() then tasks.update()\r\n\r\n  "),j=a("checkbox"),W=a("input"),q=s("\r\n  "),N=a("list"),F=s("task`>"),B=c(),K=a("ul");for(let e=0;e<X.length;e+=1)X[e].c();this.h()},l(e){p('[data-svelte="svelte-15q7n7k"]',document.head).forEach(h),t=k(e),r=o(e,"H1",{});var a=n(r);i=l(a,"Anonlang - Anonsage Language"),a.forEach(h),y=k(e),E=o(e,"P",{});var s=n(E);b=l(s,"I like thinking about programming language design. So, here's a few thoughts and sample syntax of the latest iteration I'm working on:"),s.forEach(h),x=l(e,"\r\n\r\nOutput 'Hello, World!':\r\n"),w=o(e,"CODE",{});var g=n(w);O=l(g,"'Hello, World!'"),g.forEach(h),I=l(e,"\r\n\r\nSimple Temperature converter:\r\n"),A=o(e,"CODE",{});var _=n(A);S=l(_,"fahrenheit = celsius * 1.8 + 32\r\n  'Fahrenheit: ' "),T=o(_,"INPUT",{id:!0,type:!0,bind:!0,celsius:!0}),C=l(_,"\r\n  'Celsius: ' "),H=o(_,"INPUT",{id:!0,type:!0,bind:!0,fahrenheit:!0}),_.forEach(h),L=l(e,"\r\n\r\nSimple TODO list with local and remote storage:\r\n"),D=o(e,"PRE",{});var u=n(D);P=o(u,"CODE",{});var c=n(P);U=l(c,"storage_key = 'tasks'\r\n  pref_key = 'user_storage_type_pref'\r\n  local_storage = platform.storage\r\n  remote_storage = url(https://example.com/api/storage)\r\n  user_storage = local_storage(pref_key) otherwise remote_storage(pref_key) otherwise local_storage\r\n  get_tasks() = user_storage(storage_key) otherwise mutable_list()\r\n  tasks = get_tasks()\r\n  save_task(value) = tasks.add(value) then user_storage(storage_key).add(value)\r\n  remove_task(value) = tasks.remove(value) then user_storage(storage_key).remove(value)\r\n  set_user_storage_type(storage_type) = local_storage(pref_key).set(storage_type) then remote_storage(pref_key).set(storage_type) then user_storage.update() then tasks.update()\r\n\r\n  "),j=o(c,"CHECKBOX",{text:!0,on_check:!0,on_uncheck:!0});var f=n(j);W=o(f,"INPUT",{hint:!0,on_key_enter:!0}),q=l(f,"\r\n  "),N=o(f,"LIST",{bind:!0,"template(task)":!0,"`<checkbox":!0,on_check:!0});var m=n(N);F=l(m,"task`>"),m.forEach(h),f.forEach(h),c.forEach(h),u.forEach(h),B=k(e),K=o(e,"UL",{class:!0});var d=n(K);for(let e=0;e<X.length;e+=1)X[e].l(d);d.forEach(h),this.h()},h(){document.title="Anonlang - Anonsage Language",g(T,"id","fah"),g(T,"type","number"),g(T,"bind","solve(fahrenheit,"),g(T,"celsius","cel)"),g(H,"id","cel"),g(H,"type","number"),g(H,"bind","solve(celsius,"),g(H,"fahrenheit","fah)"),g(W,"hint","Add a task"),g(W,"on_key_enter","save_task(input.text)"),g(N,"bind","tasks"),g(N,"template(task)",""),g(N,"`<checkbox",""),g(N,"on_check","remove_task(task)"),g(j,"text","Use remote storage?"),g(j,"on_check","set_user_storage_type(remote_storage)"),g(j,"on_uncheck","set_user_storage_type(local_storage)"),g(K,"class","svelte-t8e7u1")},m(e,a){_(e,t,a),_(e,r,a),u(r,i),_(e,y,a),_(e,E,a),u(E,b),_(e,x,a),_(e,w,a),u(w,O),_(e,I,a),_(e,A,a),u(A,S),u(A,T),u(A,C),u(A,H),_(e,L,a),_(e,D,a),u(D,P),u(P,U),u(P,j),u(j,W),u(j,q),u(j,N),u(N,F),_(e,B,a),_(e,K,a);for(let e=0;e<X.length;e+=1)X[e].m(K,null)},p(e,[t]){if(1&t){let r;for(R=e[0],r=0;r<R.length;r+=1){const a=d(e,R,r);X[r]?X[r].p(a,t):(X[r]=v(a),X[r].c(),X[r].m(K,null))}for(;r<X.length;r+=1)X[r].d(1);X.length=R.length}},i:f,o:f,d(e){e&&h(t),e&&h(r),e&&h(y),e&&h(E),e&&h(x),e&&h(w),e&&h(I),e&&h(A),e&&h(L),e&&h(D),e&&h(B),e&&h(K),m(X,e)}}}function E({params:e,query:t}){return this.fetch("dev.json").then(e=>e.json()).then(e=>({posts:e}))}function b(e,t,r){let{posts:a}=t;return e.$set=(e=>{"posts"in e&&r(0,a=e.posts)}),[a]}export default class extends e{constructor(e){super(),t(this,e,b,y,r,{posts:0})}}export{E as preload};
