import{S as e,i as t,s as r,e as s,t as a,f as o,g as n,h as l,d as g,j as _,k as h,l as u,m as i,a as c,q as p,c as k,n as f,o as m}from"./client.9bb1af7d.js";function d(e,t,r){const s=e.slice();return s[1]=t[r],s}function v(e){let t,r,c,p,k=e[1].title+"";return{c(){t=s("li"),r=s("a"),c=a(k),this.h()},l(e){t=o(e,"LI",{});var s=n(t);r=o(s,"A",{rel:!0,href:!0});var a=n(r);c=l(a,k),a.forEach(g),s.forEach(g),this.h()},h(){_(r,"rel","prefetch"),_(r,"href",p="dev/"+e[1].slug)},m(e,s){h(e,t,s),u(t,r),u(r,c)},p(e,t){1&t&&k!==(k=e[1].title+"")&&i(c,k),1&t&&p!==(p="dev/"+e[1].slug)&&_(r,"href",p)},d(e){e&&g(t)}}}function y(e){let t,r,i,y,b,x,E,w,A,O,I,S,T,C,D,H,L,U,j,P,W,q=e[0],F=[];for(let t=0;t<q.length;t+=1)F[t]=v(d(e,q,t));return{c(){t=c(),r=s("h1"),i=a("Anonlang - Anonsage Language"),y=c(),b=s("p"),x=a("I like thinking about programming language design. So, here's a few thoughts and sample syntax of the latest iteration I'm working on:"),E=a("\r\n\r\nOutput 'Hello, World!':\r\n"),w=s("code"),A=a("'Hello, World!'"),O=a("\r\n\r\nSimple Temperature converter:\r\n"),I=s("code"),S=a("fahrenheit = celsius * 1.8 + 32\r\n  'Fahrenheit: ' "),T=s("input"),C=a("\r\n  'Celsius: ' "),D=s("input"),H=a("\r\n\r\nSimple TODO list with local and remote storage:\r\n"),L=s("pre"),U=s("code"),j=a("storage_key = 'tasks'\r\n  pref_key = 'user_storage_type_pref'\r\n  local_storage = platform.storage\r\n  remote_storage = url(https://example.com/api/storage)\r\n  user_storage = local_storage(pref_key) otherwise remote_storage(pref_key) otherwise local_storage\r\n  get_tasks() = user_storage(storage_key) otherwise mutable_list()\r\n  tasks = get_tasks()\r\n  save_task(value) = tasks.add(value) then user_storage(storage_key).add(value)\r\n  remove_task(value) = tasks.remove(value) then user_storage(storage_key).remove(value)\r\n  set_user_storage_type(storage_type) = local_storage(pref_key).set(storage_type) then remote_storage(pref_key).set(storage_type) then user_storage.update() then tasks.update()\r\n\r\n  <checkbox text='Use remote storage?'\r\n            on_check=set_user_storage_type(remote_storage)\r\n            on_uncheck=set_user_storage_type(local_storage)>\r\n  <input hint='Add a task' on_key_enter=save_task(input.text)>\r\n  <list bind=tasks template(task)=`<checkbox on_check=remove_task(task)> task`>"),P=c(),W=s("ul");for(let e=0;e<F.length;e+=1)F[e].c();this.h()},l(e){p('[data-svelte="svelte-15q7n7k"]',document.head).forEach(g),t=k(e),r=o(e,"H1",{});var s=n(r);i=l(s,"Anonlang - Anonsage Language"),s.forEach(g),y=k(e),b=o(e,"P",{});var a=n(b);x=l(a,"I like thinking about programming language design. So, here's a few thoughts and sample syntax of the latest iteration I'm working on:"),a.forEach(g),E=l(e,"\r\n\r\nOutput 'Hello, World!':\r\n"),w=o(e,"CODE",{});var _=n(w);A=l(_,"'Hello, World!'"),_.forEach(g),O=l(e,"\r\n\r\nSimple Temperature converter:\r\n"),I=o(e,"CODE",{});var h=n(I);S=l(h,"fahrenheit = celsius * 1.8 + 32\r\n  'Fahrenheit: ' "),T=o(h,"INPUT",{id:!0,type:!0,bind:!0,celsius:!0}),C=l(h,"\r\n  'Celsius: ' "),D=o(h,"INPUT",{id:!0,type:!0,bind:!0,fahrenheit:!0}),h.forEach(g),H=l(e,"\r\n\r\nSimple TODO list with local and remote storage:\r\n"),L=o(e,"PRE",{});var u=n(L);U=o(u,"CODE",{});var c=n(U);j=l(c,"storage_key = 'tasks'\r\n  pref_key = 'user_storage_type_pref'\r\n  local_storage = platform.storage\r\n  remote_storage = url(https://example.com/api/storage)\r\n  user_storage = local_storage(pref_key) otherwise remote_storage(pref_key) otherwise local_storage\r\n  get_tasks() = user_storage(storage_key) otherwise mutable_list()\r\n  tasks = get_tasks()\r\n  save_task(value) = tasks.add(value) then user_storage(storage_key).add(value)\r\n  remove_task(value) = tasks.remove(value) then user_storage(storage_key).remove(value)\r\n  set_user_storage_type(storage_type) = local_storage(pref_key).set(storage_type) then remote_storage(pref_key).set(storage_type) then user_storage.update() then tasks.update()\r\n\r\n  <checkbox text='Use remote storage?'\r\n            on_check=set_user_storage_type(remote_storage)\r\n            on_uncheck=set_user_storage_type(local_storage)>\r\n  <input hint='Add a task' on_key_enter=save_task(input.text)>\r\n  <list bind=tasks template(task)=`<checkbox on_check=remove_task(task)> task`>"),c.forEach(g),u.forEach(g),P=k(e),W=o(e,"UL",{class:!0});var f=n(W);for(let e=0;e<F.length;e+=1)F[e].l(f);f.forEach(g),this.h()},h(){document.title="Anonlang - Anonsage Language",_(T,"id","fah"),_(T,"type","number"),_(T,"bind","solve(fahrenheit,"),_(T,"celsius","cel)"),_(D,"id","cel"),_(D,"type","number"),_(D,"bind","solve(celsius,"),_(D,"fahrenheit","fah)"),_(W,"class","svelte-t8e7u1")},m(e,s){h(e,t,s),h(e,r,s),u(r,i),h(e,y,s),h(e,b,s),u(b,x),h(e,E,s),h(e,w,s),u(w,A),h(e,O,s),h(e,I,s),u(I,S),u(I,T),u(I,C),u(I,D),h(e,H,s),h(e,L,s),u(L,U),u(U,j),h(e,P,s),h(e,W,s);for(let e=0;e<F.length;e+=1)F[e].m(W,null)},p(e,[t]){if(1&t){let r;for(q=e[0],r=0;r<q.length;r+=1){const s=d(e,q,r);F[r]?F[r].p(s,t):(F[r]=v(s),F[r].c(),F[r].m(W,null))}for(;r<F.length;r+=1)F[r].d(1);F.length=q.length}},i:f,o:f,d(e){e&&g(t),e&&g(r),e&&g(y),e&&g(b),e&&g(E),e&&g(w),e&&g(O),e&&g(I),e&&g(H),e&&g(L),e&&g(P),e&&g(W),m(F,e)}}}function b({params:e,query:t}){return this.fetch("dev.json").then(e=>e.json()).then(e=>({posts:e}))}function x(e,t,r){let{posts:s}=t;return e.$set=(e=>{"posts"in e&&r(0,s=e.posts)}),[s]}export default class extends e{constructor(e){super(),t(this,e,x,y,r,{posts:0})}}export{b as preload};
